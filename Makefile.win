

!if "$(arch)" == ""
arch = x64
!endif

!if "$(config)" == ""
config = Debug
!endif

output_root = .\\

!if "$(config)" == "Debug"
outdir = $(output_root)$(arch)\debug
CFLAGS = $(CFLAGS) /Zi /Od /MTd
!else
outdir = $(output_root)$(arch)\release
CFLAGS = $(CFLAGS) /O2 /MT
!endif

basedeps = common\shared.c common\jsmn.c common\windows\getopt.c \
	common\windows\osd.c

includes = /Iinclude /Iinclude\windows /I..\libfabric\include /FIft_osd.h \
	/Iinclude\windows\getopt
defines = /DGETOPT_STATIC
libs = ..\libfabric\$(arch)\$(config)\libfabric.lib Ws2_32.lib

CFLAGS = $(CFLAGS) $(includes) $(defines)

#all: complex simple

all: benchmarks simple unit

{benchmarks}.c{$(outdir)}.exe:
	if not exist $(@D) mkdir $(@D)
	$(CC) /Fe$@ $** $(baseincludes) $(CFLAGS) $(libs)

{simple}.c{$(outdir)}.exe:
	if not exist $(@D) mkdir $(@D)
	$(CC) /Fe$@ $** $(baseincludes) $(CFLAGS) $(libs)

{unit}.c{$(outdir)}.exe:
	if not exist $(@D) mkdir $(@D)
	$(CC) /Fe$@ $** $(baseincludes) $(CFLAGS) $(libs)


benchmarks: $(outdir)\msg_pingpong.exe $(outdir)\rdm_cntr_pingpong.exe \
	$(outdir)\rdm_pingpong.exe $(outdir)\rdm_tagged_pingpong.exe

simple: $(outdir)\cq_data.exe $(outdir)\dgram.exe $(outdir)\dgram_waitset.exe $(outdir)\msg.exe \
	$(outdir)\msg_epoll.exe $(outdir)\msg_sockets.exe \
	$(outdir)\poll.exe $(outdir)\rdm.exe $(outdir)\rdm_rma_simple.exe $(outdir)\rdm_rma_trigger.exe \
	$(outdir)\rdm_tagged_peek.exe $(outdir)\scalable_ep.exe

unit: $(outdir)\av_test.exe $(outdir)\dom_test.exe $(outdir)\eq_test.exe

complex: $(outdir)\complex.exe

clean:
	if exist $(outdir) rmdir /s /q $(outdir)
	del *.obj

$(outdir)\msg_pingpong.exe: {benchmarks}msg_pingpong.c $(basedeps) {benchmarks}benchmark_shared.c

$(outdir)\rdm_cntr_pingpong.exe: {benchmarks}rdm_cntr_pingpong.c $(basedeps) {benchmarks}benchmark_shared.c

$(outdir)\rdm_pingpong.exe: {benchmarks}rdm_pingpong.c $(basedeps) {benchmarks}benchmark_shared.c

$(outdir)\rdm_tagged_pingpong.exe: {benchmarks}rdm_tagged_pingpong.c $(basedeps) {benchmarks}benchmark_shared.c


$(outdir)\cq_data.exe: {simple}cq_data.c $(basedeps)

$(outdir)\dgram.exe: {simple}dgram.c $(basedeps)

$(outdir)\dgram_waitset.exe: {simple}dgram_waitset.c $(basedeps)

$(outdir)\msg.exe: {simple}msg.c $(basedeps)

$(outdir)\msg_epoll.exe: {simple}msg_epoll.c $(basedeps)

$(outdir)\msg_sockets.exe: {simple}msg_sockets.c $(basedeps)

$(outdir)\poll.exe: {simple}poll.c $(basedeps)

$(outdir)\rdm.exe: {simple}rdm.c $(basedeps)

$(outdir)\rdm_rma_simple.exe: {simple}rdm_rma_simple.c $(basedeps)

$(outdir)\rdm_rma_trigger.exe: {simple}rdm_rma_trigger.c $(basedeps)

$(outdir)\rdm_tagged_peek.exe: {simple}rdm_tagged_peek.c $(basedeps)

$(outdir)\scalable_ep.exe: {simple}scalable_ep.c $(basedeps)

$(outdir)\av_test.exe: {unit}av_test.c $(basedeps) {unit}common.c

$(outdir)\dom_test.exe: {unit}dom_test.c $(basedeps) {unit}common.c

$(outdir)\eq_test.exe: {unit}eq_test.c $(basedeps) {unit}common.c

$(outdir)\complex.exe: {complex}ft_comm.c {complex}ft_comp.c {complex}ft_config.c {complex}ft_domain.c {complex}ft_endpoint.c {complex}ft_main.c {complex}ft_msg.c {complex}ft_test.c $(basedeps)
	if not exist $(@D) mkdir $(@D)
	$(CC) /Fe$@ $** $(baseincludes) $(CFLAGS) $(libs)




